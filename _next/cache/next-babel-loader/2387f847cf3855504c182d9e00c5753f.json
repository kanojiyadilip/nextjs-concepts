{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\next-js\\\\pages\\\\posts\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Link } from \"next/link\";\nexport default function index({\n  posts\n}) {\n  const {\n    0: data,\n    1: setData\n  } = useState(posts); // fetch('https://jsonplaceholder.typicode.com/posts', \n  //     {method: 'get', headers: {'Content-Type':'application/json'}\n  // }).then((res)=>  res.json()).then(resData => {console.log(\"resData===========>\", resData); setData(resData)})\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"POSTS INDEX\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, data.map(val => __jsx(React.Fragment, null, __jsx(\"a\", {\n    href: \"/posts/\" + val['id'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }\n  }, __jsx(\"h3\", {\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 59\n    }\n  }, val['title'])), __jsx(\"p\", {\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  }, val['body'])))));\n}\nexport async function getStaticProps() {\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts', {\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const posts = await res.json();\n  console.log(\"posts========StaticProps>\"); // const resHtml = await fetch('http://localhost:3000/posts',{method: 'get', headers: {'Content-Type':'text/html\"'}})\n  // console.log(\"resHtml========>\", resHtml);\n\n  return {\n    props: {\n      posts\n    }\n  };\n} // export async function getServerSideProps(){\n//     const res = await fetch('https://jsonplaceholder.typicode.com/posts',{method: 'get', headers: {'Content-Type':'application/json'}})\n//     const posts = await res.json();\n//     console.log(\"posts========ServerSideProps>\", posts);\n//     return{\n//         props: {\n//             posts,\n//         }\n//     }\n// }","map":{"version":3,"sources":["D:/reactJS/next-js/pages/posts/index.js"],"names":["React","useState","Link","index","posts","data","setData","textAlign","map","val","getStaticProps","res","fetch","method","headers","json","console","log","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,WAArB;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAuB;AAClC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAACG,KAAD,CAAhC,CADkC,CAElC;AACA;AACA;;AACA,SACI,4BACI;AAAI,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAE;AAAZ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,IAAI,CAACG,GAAL,CAAUC,GAAD,IACL,4BACI;AAAG,IAAA,IAAI,EAAE,YAAUA,GAAG,CAAC,IAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B;AAAI,IAAA,KAAK,EAAE;AAACF,MAAAA,SAAS,EAAE;AAAZ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCE,GAAG,CAAC,OAAD,CAApC,CAA9B,CADJ,EAEI;AAAG,IAAA,KAAK,EAAE;AAACF,MAAAA,SAAS,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCE,GAAG,CAAC,MAAD,CAAnC,CAFJ,CADJ,CAFR,CAFJ,CADJ;AAgBH;AAED,OAAO,eAAeC,cAAf,GAA+B;AAElC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,EAA8C;AAACC,IAAAA,MAAM,EAAE,KAAT;AAAgBC,IAAAA,OAAO,EAAE;AAAC,sBAAe;AAAhB;AAAzB,GAA9C,CAAvB;AACA,QAAMV,KAAK,GAAG,MAAMO,GAAG,CAACI,IAAJ,EAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAJkC,CAMlC;AACA;;AAEA,SAAM;AACFC,IAAAA,KAAK,EAAE;AACHd,MAAAA;AADG;AADL,GAAN;AAKH,C,CAED;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from 'react';\r\nimport { Link } from \"next/link\";\r\n\r\nexport default function index({posts}){\r\n    const [data, setData] = useState(posts);\r\n    // fetch('https://jsonplaceholder.typicode.com/posts', \r\n    //     {method: 'get', headers: {'Content-Type':'application/json'}\r\n    // }).then((res)=>  res.json()).then(resData => {console.log(\"resData===========>\", resData); setData(resData)})\r\n    return(\r\n        <>\r\n            <h1 style={{textAlign: 'center'}}>POSTS INDEX</h1>\r\n            <div>\r\n                {\r\n                    data.map((val)=>(\r\n                        <>\r\n                            <a href={\"/posts/\"+val['id']}><h3 style={{textAlign: 'left'}}>{val['title']}</h3></a>\r\n                            <p style={{textAlign: 'left'}}>{val['body']}</p>\r\n                        </>\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport async function getStaticProps(){\r\n\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts',{method: 'get', headers: {'Content-Type':'application/json'}})\r\n    const posts = await res.json();\r\n    console.log(\"posts========StaticProps>\");\r\n\r\n    // const resHtml = await fetch('http://localhost:3000/posts',{method: 'get', headers: {'Content-Type':'text/html\"'}})\r\n    // console.log(\"resHtml========>\", resHtml);\r\n\r\n    return{\r\n        props: {\r\n            posts,\r\n        }\r\n    }\r\n}\r\n\r\n// export async function getServerSideProps(){\r\n\r\n//     const res = await fetch('https://jsonplaceholder.typicode.com/posts',{method: 'get', headers: {'Content-Type':'application/json'}})\r\n//     const posts = await res.json();\r\n//     console.log(\"posts========ServerSideProps>\", posts);\r\n\r\n//     return{\r\n//         props: {\r\n//             posts,\r\n//         }\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}