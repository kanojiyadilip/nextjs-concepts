{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\next-js\\\\pages\\\\posts\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Link } from \"next/link\";\nexport var __N_SSG = true;\nexport default function index(_ref) {\n  var _this = this;\n\n  var posts = _ref.posts;\n  // const [data, setData] = useState([]);\n  // fetch('https://jsonplaceholder.typicode.com/posts', \n  //     {method: 'get', headers: {'Content-Type':'application/json'}\n  // }).then((res)=>  res.json()).then(resData => {console.log(\"resData===========>\", resData); setData(resData)})\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"POSTS INDEX\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, posts.map(function (val) {\n    return __jsx(React.Fragment, null, __jsx(\"a\", {\n      href: \"/posts/\" + val['id'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 29\n      }\n    }, __jsx(\"h3\", {\n      style: {\n        textAlign: 'left'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 59\n      }\n    }, val['title'])), __jsx(\"p\", {\n      style: {\n        textAlign: 'left'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }\n    }, val['body']));\n  })));\n}","map":{"version":3,"sources":["D:/reactJS/next-js/pages/posts/index.js"],"names":["React","useState","Link","index","posts","textAlign","map","val"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,WAArB;;AAEA,eAAe,SAASC,KAAT,OAAuB;AAAA;;AAAA,MAAPC,KAAO,QAAPA,KAAO;AAClC;AACA;AACA;AACA;AACA,SACI,4BACI;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,KAAK,CAACE,GAAN,CAAU,UAACC,GAAD;AAAA,WACN,4BACI;AAAG,MAAA,IAAI,EAAE,YAAUA,GAAG,CAAC,IAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B;AAAI,MAAA,KAAK,EAAE;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCE,GAAG,CAAC,OAAD,CAApC,CAA9B,CADJ,EAEI;AAAG,MAAA,KAAK,EAAE;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCE,GAAG,CAAC,MAAD,CAAnC,CAFJ,CADM;AAAA,GAAV,CAFR,CAFJ,CADJ;AAgBH","sourcesContent":["import React, {useState} from 'react';\r\nimport { Link } from \"next/link\";\r\n\r\nexport default function index({posts}){\r\n    // const [data, setData] = useState([]);\r\n    // fetch('https://jsonplaceholder.typicode.com/posts', \r\n    //     {method: 'get', headers: {'Content-Type':'application/json'}\r\n    // }).then((res)=>  res.json()).then(resData => {console.log(\"resData===========>\", resData); setData(resData)})\r\n    return(\r\n        <>\r\n            <h1 style={{textAlign: 'center'}}>POSTS INDEX</h1>\r\n            <div>\r\n                {\r\n                    posts.map((val)=>(\r\n                        <>\r\n                            <a href={\"/posts/\"+val['id']}><h3 style={{textAlign: 'left'}}>{val['title']}</h3></a>\r\n                            <p style={{textAlign: 'left'}}>{val['body']}</p>\r\n                        </>\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport async function getStaticProps(){\r\n\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n    const posts = await res.json();\r\n\r\n    return{\r\n        props: {\r\n            posts,\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}